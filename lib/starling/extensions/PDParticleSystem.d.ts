import starling_extensions_ParticleSystem from "./../../starling/extensions/ParticleSystem";
import starling_extensions_PDParticle from "./../../starling/extensions/PDParticle";
import haxe_xml_Fast from "./../../haxe/xml/Fast";
import Xml from "./../../Xml";
import Std from "./../../Std";
import starling_utils_MathUtil from "./../../starling/utils/MathUtil";
import openfl_display3D__$Context3DBlendFactor_Context3DBlendFactor_$Impl_$ from "./../../openfl/display3D/_Context3DBlendFactor/Context3DBlendFactor_Impl_";
import starling_extensions_ColorArgb from "./../../starling/extensions/ColorArgb";
import js__$Boot_HaxeError from "./../../js/_Boot/HaxeError";
import openfl_errors_ArgumentError from "openfl/errors/ArgumentError";

declare namespace starling.extensions {

export class PDParticleSystem extends starling_extensions_ParticleSystem {

	constructor(config:any, texture:any);
	defaultDuration:any;
	emitterType:any;
	emitterXVariance:any;
	emitterYVariance:any;
	lifespan:any;
	lifespanVariance:any;
	startSize:any;
	startSizeVariance:any;
	endSize:any;
	endSizeVariance:any;
	emitAngle:any;
	emitAngleVariance:any;
	startRotation:any;
	startRotationVariance:any;
	endRotation:any;
	endRotationVariance:any;
	speed:any;
	speedVariance:any;
	gravityX:any;
	gravityY:any;
	radialAcceleration:any;
	radialAccelerationVariance:any;
	tangentialAcceleration:any;
	tangentialAccelerationVariance:any;
	maxRadius:any;
	maxRadiusVariance:any;
	minRadius:any;
	minRadiusVariance:any;
	rotatePerSecond:any;
	rotatePerSecondVariance:any;
	startColor:any;
	startColorVariance:any;
	endColor:any;
	endColorVariance:any;
	_emitterType:any;
	_emitterXVariance:any;
	_emitterYVariance:any;
	_defaultDuration:any;
	_lifespan:any;
	_lifespanVariance:any;
	_startSize:any;
	_startSizeVariance:any;
	_endSize:any;
	_endSizeVariance:any;
	_emitAngle:any;
	_emitAngleVariance:any;
	_startRotation:any;
	_startRotationVariance:any;
	_endRotation:any;
	_endRotationVariance:any;
	_speed:any;
	_speedVariance:any;
	_gravityX:any;
	_gravityY:any;
	_radialAcceleration:any;
	_radialAccelerationVariance:any;
	_tangentialAcceleration:any;
	_tangentialAccelerationVariance:any;
	_maxRadius:any;
	_maxRadiusVariance:any;
	_minRadius:any;
	_minRadiusVariance:any;
	_rotatePerSecond:any;
	_rotatePerSecondVariance:any;
	_startColor:any;
	_startColorVariance:any;
	_endColor:any;
	_endColorVariance:any;
	createParticle():any;
	initParticle(aParticle:any):any;
	advanceParticle(aParticle:any, passedTime:any):any;
	updateEmissionRate():any;
	parseConfig(config:any):any;
	getIntValue(element:any):any;
	getFloatValue(element:any):any;
	getColor(element:any):any;
	getBlendFunc(element:any):any;
	get_emitterType():any;
	set_emitterType(value:any):any;
	get_emitterXVariance():any;
	set_emitterXVariance(value:any):any;
	get_emitterYVariance():any;
	set_emitterYVariance(value:any):any;
	get_defaultDuration():any;
	set_defaultDuration(value:any):any;
	set_capacity(value:any):any;
	get_lifespan():any;
	set_lifespan(value:any):any;
	get_lifespanVariance():any;
	set_lifespanVariance(value:any):any;
	get_startSize():any;
	set_startSize(value:any):any;
	get_startSizeVariance():any;
	set_startSizeVariance(value:any):any;
	get_endSize():any;
	set_endSize(value:any):any;
	get_endSizeVariance():any;
	set_endSizeVariance(value:any):any;
	get_emitAngle():any;
	set_emitAngle(value:any):any;
	get_emitAngleVariance():any;
	set_emitAngleVariance(value:any):any;
	get_startRotation():any;
	set_startRotation(value:any):any;
	get_startRotationVariance():any;
	set_startRotationVariance(value:any):any;
	get_endRotation():any;
	set_endRotation(value:any):any;
	get_endRotationVariance():any;
	set_endRotationVariance(value:any):any;
	get_speed():any;
	set_speed(value:any):any;
	get_speedVariance():any;
	set_speedVariance(value:any):any;
	get_gravityX():any;
	set_gravityX(value:any):any;
	get_gravityY():any;
	set_gravityY(value:any):any;
	get_radialAcceleration():any;
	set_radialAcceleration(value:any):any;
	get_radialAccelerationVariance():any;
	set_radialAccelerationVariance(value:any):any;
	get_tangentialAcceleration():any;
	set_tangentialAcceleration(value:any):any;
	get_tangentialAccelerationVariance():any;
	set_tangentialAccelerationVariance(value:any):any;
	get_maxRadius():any;
	set_maxRadius(value:any):any;
	get_maxRadiusVariance():any;
	set_maxRadiusVariance(value:any):any;
	get_minRadius():any;
	set_minRadius(value:any):any;
	get_minRadiusVariance():any;
	set_minRadiusVariance(value:any):any;
	get_rotatePerSecond():any;
	set_rotatePerSecond(value:any):any;
	get_rotatePerSecondVariance():any;
	set_rotatePerSecondVariance(value:any):any;
	get_startColor():any;
	set_startColor(value:any):any;
	get_startColorVariance():any;
	set_startColorVariance(value:any):any;
	get_endColor():any;
	set_endColor(value:any):any;
	get_endColorVariance():any;
	set_endColorVariance(value:any):any;
	static EMITTER_TYPE_GRAVITY:any;
	static EMITTER_TYPE_RADIAL:any;


}

}

export default starling.extensions.PDParticleSystem;