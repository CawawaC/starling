import starling_events_EventDispatcher from "./../../starling/events/EventDispatcher";
import openfl_Lib from "openfl/Lib";
import Type from "./../../Type";
import Std from "./../../Std";
import starling_display_DisplayObject from "./../../starling/display/DisplayObject";
import js__$Boot_HaxeError from "./../../js/_Boot/HaxeError";
import openfl_errors_Error from "openfl/errors/Error";
import starling_utils_Color from "./../../starling/utils/Color";
import starling_utils_RectangleUtil from "./../../starling/utils/RectangleUtil";
import openfl_geom_Rectangle from "openfl/geom/Rectangle";
import openfl_display_Shape from "openfl/display/Shape";
import openfl_text_TextField from "openfl/text/TextField";
import openfl_text_TextFormat from "openfl/text/TextFormat";
import haxe_Log from "./../../haxe/Log";
import haxe_Timer from "./../../haxe/Timer";
import openfl_system_Capabilities from "openfl/system/Capabilities";
import starling_events_KeyboardEvent from "./../../starling/events/KeyboardEvent";
import js_Boot from "./../../js/Boot";
import openfl_display_Stage from "openfl/display/Stage";
import starling_events_ResizeEvent from "./../../starling/events/ResizeEvent";
import openfl_events_MouseEvent from "openfl/events/MouseEvent";
import openfl_events_TouchEvent from "openfl/events/TouchEvent";
import openfl_ui_Mouse from "openfl/ui/Mouse";
import starling_utils_SystemUtil from "./../../starling/utils/SystemUtil";
import starling_core_StatsDisplay from "./../../starling/core/StatsDisplay";
import openfl_errors_ArgumentError from "openfl/errors/ArgumentError";
import openfl_display3D__$Context3DProfile_Context3DProfile_$Impl_$ from "./../../openfl/display3D/_Context3DProfile/Context3DProfile_Impl_";
import openfl_display_DisplayObjectContainer from "openfl/display/DisplayObjectContainer";
import openfl_Vector from "openfl/Vector";
import openfl_ui_Multitouch from "openfl/ui/Multitouch";
import openfl_errors_IllegalOperationError from "openfl/errors/IllegalOperationError";
import starling_display_Stage from "./../../starling/display/Stage";
import openfl_display_Sprite from "openfl/display/Sprite";
import starling_events_TouchProcessor from "./../../starling/events/TouchProcessor";
import starling_animation_Juggler from "./../../starling/animation/Juggler";
import starling_rendering_Painter from "./../../starling/rendering/Painter";
import openfl_display3D__$Context3DRenderMode_Context3DRenderMode_$Impl_$ from "./../../openfl/display3D/_Context3DRenderMode/Context3DRenderMode_Impl_";

declare namespace starling.core {

export class Starling extends starling_events_EventDispatcher {

	constructor(rootClass:any, stage:any, viewPort?:any, stage3D?:any, renderMode?:any, profile?:any);
	__stage:any;
	__rootClass:any;
	__root:any;
	__juggler:any;
	__painter:any;
	__touchProcessor:any;
	__antiAliasing:any;
	__frameTimestamp:any;
	__frameID:any;
	__leftMouseDown:any;
	__statsDisplay:any;
	__started:any;
	__rendering:any;
	__supportHighResolutions:any;
	__skipUnchangedFrames:any;
	__showStats:any;
	__viewPort:any;
	__previousViewPort:any;
	__clippedViewPort:any;
	
	__nativeStageEmpty:any;
	__nativeOverlay:any;
	dispose():any;
	initialize():any;
	initializeRoot():any;
	nextFrame():any;
	advanceTime(passedTime:any):any;
	render():any;
	updateViewPort(forceUpdate?:any):any;
	updateNativeOverlay():any;
	stopWithFatalError(message:any):any;
	makeCurrent():any;
	start():any;
	stop(suspendRendering?:any):any;
	setRequiresRedraw():any;
	onStage3DError(event:any):any;
	onContextCreated(event:any):any;
	onContextRestored(event:any):any;
	onEnterFrame(event:any):any;
	onKey(event:any):any;
	onResize(event:any):any;
	onMouseLeave(event:any):any;
	onTouch(event:any):any;
	touchEventTypes:any;
	get_touchEventTypes():any;
	mustAlwaysRender:any;
	get_mustAlwaysRender():any;
	isStarted:any;
	get_isStarted():any;
	juggler:any;
	get_juggler():any;
	painter:any;
	get_painter():any;
	context:any;
	get_context():any;
	simulateMultitouch:any;
	get_simulateMultitouch():any;
	set_simulateMultitouch(value:any):any;
	enableErrorChecking:any;
	get_enableErrorChecking():any;
	set_enableErrorChecking(value:any):any;
	antiAliasing:any;
	get_antiAliasing():any;
	set_antiAliasing(value:any):any;
	viewPort:any;
	get_viewPort():any;
	set_viewPort(value:any):any;
	contentScaleFactor:any;
	get_contentScaleFactor():any;
	nativeOverlay:any;
	get_nativeOverlay():any;
	showStats:any;
	get_showStats():any;
	set_showStats(value:any):any;
	showStatsAt(horizontalAlign?:any, verticalAlign?:any, scale?:any):any;
	stage:any;
	get_stage():any;
	stage3D:any;
	get_stage3D():any;
	
	get_nativeStage():any;
	root:any;
	get_root():any;
	rootClass:any;
	get_rootClass():any;
	set_rootClass(value:any):any;
	shareContext:any;
	get_shareContext():any;
	set_shareContext(value:any):any;
	profile:any;
	get_profile():any;
	supportHighResolutions:any;
	get_supportHighResolutions():any;
	set_supportHighResolutions(value:any):any;
	skipUnchangedFrames:any;
	get_skipUnchangedFrames():any;
	set_skipUnchangedFrames(value:any):any;
	touchProcessor:any;
	get_touchProcessor():any;
	set_touchProcessor(value:any):any;
	frameID:any;
	get_frameID():any;
	contextValid:any;
	get_contextValid():any;
	isNativeDisplayObjectEmpty(object:any):any;
	static VERSION:any;
	static sCurrent:any;
	static sAll:any;
	static current:any;
	static get_current():any;
	static all:any;
	static get_all():any;
	static multitouchEnabled:any;
	static get_multitouchEnabled():any;
	static set_multitouchEnabled(value:any):any;


}

}

export default starling.core.Starling;